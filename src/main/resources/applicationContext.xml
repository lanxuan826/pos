<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
	default-lazy-init="true">
	
	<description>Spring公共配置 </description>
	
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.lanxuan" >
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/> 
	</context:component-scan>
	
	<!-- AOP代理（AOP Proxy）应用cglib生成代理 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- Hibernate配置 -->
	<bean id="namingStrategy" class="com.lanxuan.pub.orm.MyNamingStrategy">
		<property name="packagesToScan" value="com.lanxuan"></property>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 命名规则 My_NAME->MyName  -->
		<property name="namingStrategy" ref="namingStrategy"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.SingletonEhCacheRegionFactory</prop>
				<prop key="net.sf.ehcache.configurationResourceName">ehcache-configuration.xml</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.lanxuan.pub.entity</value>
			</list>
		</property>
	</bean>
	
	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
			<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 定义声明式事物 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delet*" propagation="REQUIRED"/>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置aop切入点 和事务访问策略 --> 
    <aop:config>
        <aop:advisor advice-ref="txAdvice" 
            pointcut="execution(* *..service..*Service.*(..))" /> 
    </aop:config>
    <aop:config>
        <aop:advisor advice-ref="txAdvice" 
            pointcut="execution(* *..service..*Manager.*(..))" />
    </aop:config> 
    
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
		<context:property-placeholder ignore-unresolvable="true"
			location="classpath*:/application.properties" />	
			
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
	</bean>
	
	<!-- Mybatis配置 -->
	<bean id ="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation">
			<value>classpath:/mybatisConfig.xml</value>
		</property>
		
		<property name="dataSource" ref="dataSource"></property>
		<!-- 自动扫描该目录下实体类 -->
		<property name="typeAliasesPackage" value="com.lanxuan.pub.entity" />
		 <!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath*:/mybatis/*/*Mapper.xml" />
	</bean>
	
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lanxuan" />
		<property name="annotationClass" value=" com.lanxuan.pub.base.repository.mybatis.MyBatisRepository"/>
	</bean>
	
	
	
	<!-- 数据源配置， 使用DBCP数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<!-- Connection info -->
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		
		<!-- Connection pooling info -->
		<property name="maxActive" value="${dbcp.maxActive}"></property>
		<property name="maxIdle" value="${dbcp.maxIdle}"></property>
		<property name="defaultAutoCommit" value="false"></property>
		
		<!-- 连接Idle一个小时后超时 -->
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<property name="minEvictableIdleTimeMillis" value="3600000" />
	</bean>
	
</beans>